import { getQuizPublics, joinQuiz, StatisticsResultStudents } from '../../api/QuizService.js';
import { createChats } from '../../api/ChatService.js'; // üëà b·∫°n ƒë√£ t·∫°o h√†m n√†y

document.addEventListener("DOMContentLoaded", async function () {
  const quizData = await getQuizs();
  const container = document.getElementById("quiz-detail");
  const id = new URL(window.location.href).searchParams.get("id");

  renderQuiz(id);

  // X√≥a localStorage quiz n·∫øu l√† l·∫ßn ƒë·∫ßu
  if (!sessionStorage.getItem("hasVisited")) {
    Object.keys(localStorage).forEach((key) => {
      if (key.startsWith("quiz_") || key === "quizStatus" || key === "quizScoresData") {
        localStorage.removeItem(key);
      }
    });
    sessionStorage.setItem("hasVisited", "true");
  }

  async function renderQuiz() {
    const quiz = quizData.find(q => q.quizID === id);
    const quizStatus = JSON.parse(localStorage.getItem("quizStatus")) || {};

    const quiz_detail = `
       <div class="quiz-title-row">
    <img src="../styles/img/logo-icon.png" alt="quiz icon" class="icon-title" />
    <strong>${quiz.title}</strong>
  </div>
  <div class="quiz-content">
    <p class="teacher-info">
      GV: ${quiz.teacherName} ‚Ä¢ 
      <a href="#" id="contact-link" data-teacher="${quiz.teacherName}">Li√™n h·ªá GV</a>
    </p>
    <span class="quiz-duration">
      <img src="../styles/img/clock.png" alt="clock" class="icon-duration" />
      ${quiz.duration} ph√∫t
    </span>
      </div>
      </div>
      <div class="quiz-body">
        <strong>${quiz.title}</strong>
        <p><strong>N·ªôi dung b√†i quiz:</strong></p>
        <p>${quiz.description}</p>
        <p><strong>B·∫Øt ƒë·∫ßu v√†o ng√†y:</strong> ${quiz.startTime}</p>
        <p><strong>K·∫øt th√∫c v√†o ng√†y:</strong> ${quiz.endTime}</p>
    `;

    if (quiz && container) {
      if (quizStatus[id] === "done") {
        const attempts = JSON.parse(localStorage.getItem("quizAttempts")) || {};
        const attemptCount = attempts[id] || 1; // m·∫∑c ƒë·ªãnh l√† 1 n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu

        container.innerHTML = `
          <div class="quiz-header">
            ${quiz_detail}
            <p style="color: green; font-weight: bold;">
              B·∫°n ƒë√£ ho√†n th√†nh b√†i tr·∫Øc nghi·ªám n√†y ${attemptCount} l·∫ßn
            </p>
            <button class="retake-btn">L√†m l·∫°i b√†i tr·∫Øc nghi·ªám</button>
            <button class="score-btn">Xem ƒëi·ªÉm</button>
          </div>
        `;


        container.querySelector(".retake-btn").addEventListener("click", () => {
          showLoading();
          const data = {
            studentID: localStorage.getItem("userID"),
            quizID: quiz.quizID
          };
          getJoinQuiz(data, quiz);
        });

        container.querySelector(".score-btn").addEventListener("click", () => {
          window.location.href = "quiz-answer-score.html?quizId=" + id;
        });

      } else {
        container.innerHTML = `
          <div class="quiz-header">
            ${quiz_detail}
            <button class="start-btn" id="start-btn">B·∫Øt ƒë·∫ßu l√†m b√†i</button>
          </div>
        `;

        const startBtn = container.querySelector(".start-btn");
        startBtn.addEventListener("click", function () {
          showLoading();
          const data = {
            studentID: localStorage.getItem("userID"),
            quizID: quiz.quizID
          };
          getJoinQuiz(data, quiz);
        });
      }

      // G·∫Øn s·ª± ki·ªán click cho "Li√™n h·ªá GV"
      const contactLink = document.getElementById("contact-link");
      if (contactLink) {
        contactLink.addEventListener("click", async function (e) {
          e.preventDefault();

          const teacherName = contactLink.dataset.teacher;
          const studentName = localStorage.getItem("username"); // L∆∞u trong login

          if (!studentName || !teacherName) {
            alert("Kh√¥ng th·ªÉ li√™n h·ªá gi√°o vi√™n. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.");
            return;
          }

          await createCourseChat(studentName, teacherName);
        });
      }

    } else {
      container.innerHTML = `<p>Kh√¥ng t√¨m th·∫•y b√†i h·ªçc n√†y.</p>`;
    }
  }

  const viewAllScoresBtn = document.getElementById("view-all-scores-btn");
  if (viewAllScoresBtn) {
    viewAllScoresBtn.addEventListener("click", async () => {
      const studentID = localStorage.getItem("userID");
      const quizResults = await fetchStudentQuizResults(studentID);
      const container = document.getElementById("quiz-detail");
      container.innerHTML = "";

      const title = document.createElement("h3");
      title.textContent = "K·∫øt qu·∫£ c√°c b√†i tr·∫Øc nghi·ªám";
      container.appendChild(title);

      const scoreListContainer = document.createElement("div");
      scoreListContainer.className = "quiz-score-list";
      container.appendChild(scoreListContainer);

      quizResults.forEach(result => {
        const quiz = result.quiz;
        const quizDiv = document.createElement("div");
        quizDiv.className = "quiz-score-box";

        quizDiv.innerHTML = `
          <div class="quiz-score-title"><strong>Bu·ªïi ${quiz.startTime}: ${quiz.title}</strong></div>
          <p>L√†m v√†o ng√†y: ${new Date(result.startTime).toLocaleDateString()}</p>
          <p>S·ªë c√¢u ƒë√∫ng: ${result.totalCorrectAnswers}/${quiz.questions.length}</p>
          <p>S·ªë ƒëi·ªÉm ƒë·∫°t ƒë∆∞·ª£c: ${result.score}/10</p>
          <button class="detail-btn" data-id="${result.resultID}">Xem chi ti·∫øt b√†i tr·∫Øc nghi·ªám</button>
        `;
        scoreListContainer.appendChild(quizDiv);
      });

      scoreListContainer.querySelectorAll(".detail-btn").forEach(btn => {
        btn.addEventListener("click", function () {
          const resultID = this.dataset.id;
          window.location.href = `quiz-answer-score.html?resultID=${resultID}`;
        });
      });
    });
  }
});

// === C√°c h√†m ph·ª• ===

function getQuizs() {
  return getQuizPublics()
    .then(res => res.result)
    .catch(err => {
      console.error("L·ªói khi l·∫•y quiz:", err);
    });
}

function getJoinQuiz(data, quiz) {
  joinQuiz(data)
    .then(res => {
      const resultRes = res.result;
      localStorage.setItem("quiz", JSON.stringify(quiz));
      localStorage.setItem("resultRes", JSON.stringify(resultRes));

      const now = Date.now();
      const durationMs = Number(quiz.duration) * 60 * 1000;
      localStorage.setItem("quizEndTime", now + durationMs);

      window.location.href = "quiz.html?id=" + quiz.quizID;
      localStorage.removeItem("indexPage");
    })
    .catch(err => {
      console.error("L·ªói khi v√†o quiz:", err);
    });
}

function fetchStudentQuizResults(studentID) {
  return StatisticsResultStudents(studentID)
    .then(res => res.result || [])
    .catch(err => {
      console.error("L·ªói khi l·∫•y k·∫øt qu·∫£:", err);
      return [];
    });
}

function showLoading() {
  const overlay = document.getElementById("loading-overlay");
  if (overlay) overlay.style.display = "flex";
}

// H√†m g·ªçi API t·∫°o ho·∫∑c l·∫•y cu·ªôc tr√≤ chuy·ªán
async function createCourseChat(name1, name2) {
  try {
    const res = await createChats(name1, name2); // g·ªçi GET API

    if (res.result && res.result.chatID) {
      const chatID = res.result.chatID;
      window.location.href = `chat_course-form.html?chatID=${chatID}`;
    } else {
      alert("Kh√¥ng th·ªÉ t·∫°o ho·∫∑c t√¨m th·∫•y cu·ªôc tr√≤ chuy·ªán.");
    }
  } catch (err) {
    console.error("L·ªói khi t·∫°o chat:", err);
    alert("ƒê√£ x·∫£y ra l·ªói khi t·∫°o cu·ªôc tr√≤ chuy·ªán.");
  }
}
